@model ML.Usuario

@{
    ViewBag.Title = "Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Form</h2>

<div class="container">

    <div class="row">
        <div class="col-md-12">
            <h5>Ingrese la informacion solicitada</h5>
            <hr />
        </div>
    </div>

    @using (Html.BeginForm("Form", "Usuario", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <div class="row">
            <div class="col-md-6 visually-hidden">
                @Html.LabelFor(model => model.IdUsuario)
                @Html.TextBoxFor(model => model.IdUsuario, new { @class = "form-control" })

            </div>



            <div class="col-md-4">
                @Html.LabelFor(model => model.UserName)
                @Html.TextBoxFor(model => model.UserName, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.UserName)
            </div>

            <div class="col-md-4">
                @Html.LabelFor(model => model.Email)
                @Html.TextBoxFor(model => model.Email, new { @class = "form-control", id = "txtEmail", @onblur = "return ValidarEmail(event,'lblErrorEmail')", @autocomplete = "off" })
                @Html.ValidationMessageFor(model => model.Email)
                <label id="lblErrorEmail"></label>
            </div>

            <div class="col-md-4">
                @Html.LabelFor(model => model.Email)
                @Html.TextBoxFor(model => model.Email, new { @class = "form-control", id = "txtEmail2", @onblur = "VerificarEmail('lblErrorEmail2')", @autocomplete = "off" })
                @Html.ValidationMessageFor(model => model.Email)
                <label id="lblErrorEmail2"></label>
            </div>


            @*<div class="col-md-4">
                    @Html.LabelFor(model => model.Email)
                    @Html.TextBoxFor(model => model.Email, new { @class = "form-control"  ,id = "email2", @onblur = "verificarPassword('controlId')" })
                    @Html.ValidationMessageFor(model => model.Email)
                </div>*@

            <div class="col-md-4">
                @Html.LabelFor(model => model.ApellidoPaterno)
                @Html.TextBoxFor(model => model.ApellidoPaterno, new { @class = "form-control", @onkeypress = "SoloLetras2(event,'controlID2')" })
                @Html.ValidationMessageFor(model => model.ApellidoPaterno)
                <label id="controlID2"></label>
            </div>


        </div>





        <div class="row">


            <div class="col-md-4">
                @Html.LabelFor(model => model.ApellidoMaterno)
                @Html.TextBoxFor(model => model.ApellidoMaterno, new { @class = "form-control", @onkeypress = "SoloLetras3(event, 'controlId3')" })
                @Html.ValidationMessageFor(model => model.ApellidoMaterno)
                <label id="controlId3"></label>

            </div>

            <div class="col-md-4">
                @Html.LabelFor(model => model.Password)
                @Html.TextBoxFor(model => model.Password, new { @class = "form-control", id = "pass1", @onblur = "return ValidarPass(event,'controlId2')", @autocomplete = "off" })
                @Html.ValidationMessageFor(model => model.Password)
                <label id="controlId2"></label>
            </div>

            <div class="col-md-4">
                @Html.LabelFor(model => model.Password)
                @Html.TextBoxFor(model => model.Password, new { @class = "form-control", id = "pass2", @onblur = "verificarPassword('controlId')", @autocomplete = "off" })
                @Html.ValidationMessageFor(model => model.Password)
                <label id="controlId"></label>
            </div>


            @*<div class="col-md-4">
                    @Html.LabelFor(model => model.Sexo)
                    @Html.TextBoxFor(model => model.Sexo, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Sexo)
                </div>*@
            <div class="form-group">
                <div class="col-md-6" style=" margin-top :20px;">
                    @Html.LabelFor(model => model.Sexo)
                    @if (Model.Sexo == "H ")
                    {
                        <label> @Html.RadioButtonFor(model => model.Sexo, "H", new { @class = "from-control", @id = "rbtnSexoH", @checked = "true" })  Masculino </label>
                    }
                    else
                    {
                        <label> @Html.RadioButtonFor(model => model.Sexo, "H", new { @class = "from-control", @id = "rbtnSexoH" })  Masculino </label>
                    }

                    @if (Model.Sexo == "M ")
                    {
                        <label> @Html.RadioButtonFor(model => model.Sexo, "M", new { @class = "from-control", @id = "rbtnSexoM", @checked = "true" })  Femenino </label>
                    }
                    else
                    {
                        <label> @Html.RadioButtonFor(model => model.Sexo, "M", new { @class = "from-control", @id = "rbtnSexoM" })  Femenino </label>
                    }



                </div>

            </div>


        </div>




        <div class="row">
            <div class="col-md-4">
                @Html.LabelFor(model => model.Telefono)
                @Html.TextBoxFor(model => model.Telefono, new { @class = "form-control", id = "txtTelefono", @onblur = "return ValidarTelefono(event,'lblErrorTelefono')", @autocomplete = "off" })
                @Html.ValidationMessageFor(model => model.Telefono)
                <label id="lblErrorTelefono"></label>

            </div>

            <div class="col-md-4">
                @Html.LabelFor(model => model.Celular)
                @Html.TextBoxFor(model => model.Celular, new { @class = "form-control", id = "txtCelular", @onblur = "return ValidarCelular(event,'lblErrorCelular')", @autocomplete = "off" })
                @Html.ValidationMessageFor(model => model.Celular)
                <label id="lblErrorCelular"></label>
            </div>
            @**@
            <div class="col-md-4">
                @Html.LabelFor(model => model.FechaNacimiento)
                @Html.TextBoxFor(model => model.FechaNacimiento, new { @class = "form-control", @id = "datepicker", @type = "text" })
                @Html.ValidationMessageFor(model => model.FechaNacimiento)
            </div>



            @*<div class="input-group date">
                    <asp:TextBox runat="server" ID="txtDataOrdine" class="form-control" onBlur="CalcolaTotaliTestata('txtDataOrdine')"></asp:TextBox>
                    <span class="input-group-addon"><i class="glyphicon glyphicon-calendar"></i>/span>
                </div>*@


        </div>



        <div class="row">


            <div class="col-md-4 visually-hidden">
                @Html.LabelFor(model => model.CURP)
                @Html.TextBoxFor(model => model.CURP, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CURP)
            </div>

            <div class="col-md-4">
                @*comienza menu desplegable**@
                @Html.DropDownListFor(model => model.Rol.IdRol, new SelectList(Model.Rol.Roles, "IdRol", "NombreRol"), "Seleccione una opción", new { @class = "form-control" })


                @* termina menu desplegable esto se llama html helper **@
            </div>
            <div class="col-md-4">
                @Html.LabelFor(model => model.Nombre)
                @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control", @onkeypress = "SoloLetras1(event, 'controlIdnombre')" })
                @Html.ValidationMessageFor(model => model.Nombre)
                <label id="controlIdnombre"></label>


            </div>


        </div>



        //aqui se va a poner el menu desplegable


        <div class="row">
            <div class="col-md-12">
                @Html.LabelFor(model => model.Imagen)
                <input type="file" id="fuImagen" name="fuImagen" onchange="PreviewImagen(event)" />

                @if (Model.Imagen == null)
                {
                    <img src="~/Image/DefaultImage.jpg" id="imgUsuario" width="100" height="100" />
                }
                else
                {

                    <img id="imgUsuario" src="data:image/jpeg;base64,@Convert.ToBase64String(Model.Imagen)" width="100" height="100" />

                }

                @Html.HiddenFor(model => model.Imagen)


            </div>

        </div>
        @*aqui*@







        <div class="row">
            <div class="form-group col-md-3">
                @Html.Label("País")
                @if (Model.Direccion.Colonia.Municipio.Estado.Pais.Paises == null)
                {
                    @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.Estado.Pais.IdPais, new SelectList(string.Empty, "Value", "Text"), "Selecciona un Pais", htmlAttributes: new { @id = "ddlPais", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Direccion.Colonia.Municipio.Estado.Pais.IdPais, null, new { @class = "text-danger" })
                }
                else
                {
                    @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.Estado.Pais.IdPais, new SelectList(Model.Direccion.Colonia.Municipio.Estado.Pais.Paises, "IdPais", "Nombre"), "Selecciona un país", htmlAttributes: new { @id = "ddlPais", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Direccion.Colonia.Municipio.Estado.Pais.IdPais, null, new { @class = "text-danger" })
                }
            </div>
            @*Drop Down List Estados*@
            <div class="form-group col-md-3">
                @Html.LabelFor(model => model.Direccion.Colonia.Municipio.Estado, new { @class = "control-label" })
                @if (Model.Direccion.Colonia.Municipio.Estado.Estados == null)
                {
                    @*model.Categoria.IdCategoria*@
                    @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.Estado.IdEstado, new SelectList(string.Empty, "Value", "Text"), "Selecciona un Estado", htmlAttributes: new { @id = "ddlEstado", @class = "form-control" })

                }
                else
                {
                    @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.Estado.IdEstado, new SelectList(Model.Direccion.Colonia.Municipio.Estado.Estados, "IdEstado", "Nombre"), "Selecciona un Estado", htmlAttributes: new { @id = "ddlEstado", @class = "form-control" })
                }
            </div>

            @*Drop Down List Minicipi*@
            <div class="form-group col-md-3">
                @Html.LabelFor(model => model.Direccion.Colonia.Municipio, new { @class = "control-label" })
                @if (Model.Direccion.Colonia.Municipio.Municipios == null)
                {
                    @*model.Categoria.IdCategoria*@
                    @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.IdMunicipio, new SelectList(string.Empty, "Value", "Text"), "Selecciona un Municipio", htmlAttributes: new { @id = "ddlMunicipio", @class = "form-control" })

                }
                else
                {
                    @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.IdMunicipio, new SelectList(Model.Direccion.Colonia.Municipio.Municipios, "IdMunicipio", "Nombre"), "Selecciona un Municipio", htmlAttributes: new { id = "ddlMunicipio", @class = "form-control" })
                }
            </div>

            @*Drop Down List Colonia*@
            <div class="form-group col-md-3">
                @Html.LabelFor(model => model.Direccion.Colonia, new { @class = "control-label" })
                @if (Model.Direccion.Colonia.Colonias == null)
                {
                    @*model.Categoria.IdCategoria*@
                    @Html.DropDownListFor(model => model.Direccion.Colonia.IdColonia, new SelectList(string.Empty, "Value", "Text"), "Selecciona una colonia", htmlAttributes: new { @id = "ddlColonia", @class = "form-control" })

                }
                else
                {
                    @Html.DropDownListFor(model => model.Direccion.Colonia.IdColonia, new SelectList(Model.Direccion.Colonia.Colonias, "IdColonia", "Nombre"), "Selecciona una colonia ", htmlAttributes: new { @id = "ddlColonia", @class = "form-control" })
                }
            </div>
        </div>

        <div class="row">
            <div class="col-md-4">
                @Html.LabelFor(model => model.Direccion.Calle)
                @Html.TextBoxFor(model => model.Direccion.Calle, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Direccion.Calle)
            </div>

            <div class="col-md-4">
                @Html.LabelFor(model => model.Direccion.NumeroInterior)
                @Html.TextBoxFor(model => model.Direccion.NumeroInterior, new { @class = "form-control" })


            </div>

            <div class="col-md-4">
                @Html.LabelFor(model => model.Direccion.NumeroExterior)
                @Html.TextBoxFor(model => model.Direccion.NumeroExterior, new { @class = "form-control" })
            </div>

            <div class="col-md-6 visually-hidden">
                @Html.LabelFor(model => model.Direccion.IdDireccion)
                @Html.TextBoxFor(model => model.Direccion.IdDireccion, new { @class = "form-control" })
            </div>



        </div>


        <button class="btn btn-success bi bi-floppy" type="submit">
            Guardar
        </button>

        @Html.ActionLink(" regresar", "GetAll", "Usuario", new { area = "" }, new { @class = "btn btn-success bi bi-arrow-left-square" })




    }

</div>
<script src="~/Scripts/jquery-3.4.1.js"></script>

<link rel="stylesheet" href="//code.jquery.com/ui/1.13.2/themes/base/jquery-ui.css">
<link rel="stylesheet" href="/resources/demos/style.css">
@section scripts{

    <script src="https://code.jquery.com/jquery-3.6.0.js"></script>
    <script src="https://code.jquery.com/ui/1.13.2/jquery-ui.js"></script>
    <script type="text/javascript">

    $(function () {
        $("#datepicker").datepicker({
            dateFormat: 'dd/mm/yy',
            changeMonth: true,
            changeYear: true,
            yearRange: '1910:2023',
            maxDate: new Date()
        });
    });





    function PreviewImagen(event) {
        var output = document.getElementById('imgUsuario');
        output.src = URL.createObjectURL(event.target.files[0]);
        output.onload = function () {
            URL.revokeObjectURL(output.src)
        }
    }

    function verificarPassword(controlId) {
        pass1 = document.getElementById('pass1');
        pass2 = document.getElementById('pass2');
        if (pass1.value != pass2.value) {
            pass1.style.borderColor = "red";
            pass2.style.borderColor = "red";
            $('#' + controlId).text("Las contraseñas no coinciden");
            $('#' + controlId).css({ "color": "red" })
            return false;
        }
        else
        {
            pass1.style.borderColor = "green";
            pass2.style.borderColor = "green";
            $('#' + controlId).text("Las contraseñas  coinciden");
            $('#' + controlId).css({ "color": "green" })
        }

    }

    function VerificarEmail(lblErrorEmail2) {
        pass1 = document.getElementById('txtEmail');
        pass2 = document.getElementById('txtEmail2');
        if (pass1.value != pass2.value) {
            pass1.style.borderColor = "red";
            pass2.style.borderColor = "red";
            $('#' + lblErrorEmail2).text("los email no coinciden");
            $('#' + lblErrorEmail2).css({ "color": "red" })
            return false;
        }
        else {
            pass1.style.borderColor = "green";
            pass2.style.borderColor = "green";
            $('#' + lblErrorEmail2).text("los email  coinciden");
            $('#' + lblErrorEmail2).css({ "color": "green" })
        }

    }






    function ValidarPass(event, controlId2) {
        var pass = document.getElementById("pass1").value;
        var lblError = document.getElementById("controlId2");
        lblError.innerHTML = "";
        var expt = /^(?=.*\d)(?=.*[\u0021-\u002b\u003c-\u0040])(?=.*[A-Z])(?=.*[a-z])\S{8,50}$/;
        if (!expt.test(pass)) {
            lblError.innerHTML = "la contraseña no es valido"
            lblError.style.color = "red";

            return false;
        }
        else {
            lblError.innerHTML = "la contraseña es valido";
            lblError.style.color = "green";

        }
    }

    //^\d{10}$

    function ValidarEmail(event, lblErrorEmail) {
        var email = document.getElementById("txtEmail").value;
        var lblError = document.getElementById("lblErrorEmail");
        lblError.innerHTML = "";
        var expt = /^([a-zA-z0-9_\.\-\+])+\@@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/;
        if (!expt.test(email)) {
            lblError.innerHTML = "El correo no es valido"
            lblError.style.color = "red";

            return false;
        }
        else {
            lblError.innerHTML = "El correo es valido";
            lblError.style.color = "green";

        }
    }

    function ValidarTelefono(event, lblErrorTelefono) {
        var telefono = document.getElementById("txtTelefono").value;
        var lblError = document.getElementById("lblErrorTelefono");
        lblError.innerHTML = "";
        var expt = /^\d{10}$/;
        if (!expt.test(telefono)) {
            lblError.innerHTML = "El telefono no es valido"
            lblError.style.color = "red";

            return false;
        }
        else {
            lblError.innerHTML = "El Telefono es valido";
            lblError.style.color = "green";

        }
    }

    function ValidarCelular(event, lblErrorCelular) {
        var telefono = document.getElementById("txtCelular").value;
        var lblError = document.getElementById("lblErrorCelular");
        lblError.innerHTML = "";
        var expt = /^\d{10}$/;
        if (!expt.test(telefono)) {
            lblError.innerHTML = "El Celular no es valido"
            lblError.style.color = "red";

            return false;
        }
        else {
            lblError.innerHTML = "El Celular es valido";
            lblError.style.color = "green";

        }
    }





    function SoloLetras1(event, controlIdnombre) {
        var letra = event.key;
        var regexOnlyLetters = /^[A-Za-z ]+$/;
        var lblError = document.getElementById("controlIdnombre");
        if (regexOnlyLetters.test(letra)) {
            lblError.innerHTML = "nombre valido";
            lblError.style.color = "green";
            return true;
        }
        else
        {
            lblError.innerHTML = "solo letras"
            lblError.style.color = "red";
            //alert('Solo se aceptn letras');
            return false;
        }
    }


    function SoloLetras2(event,controlID2) {
        var letra = event.key;
        var regexOnlyLetters = /^[A-Za-z ]+$/;
        var lblError = document.getElementById("controlID2");
        if (regexOnlyLetters.test(letra)) {
            lblError.innerHTML = "apellido paterno valido";
            lblError.style.color = "green";
            return true;
        }
        else {
            lblError.innerHTML = "solo letras";
            lblError.style.color = "red";

            alert('Solo se aceptn letras');
            return false;
        }
    }

    function SoloLetras3(event, controlId3) {
        var letra = event.key;
        var regexOnlyLetters = /^[A-Za-z ]+$/;
        var lblError = document.getElementById("controlId3");
        if (regexOnlyLetters.test(letra)) {
            lblError.innerHTML = "apellido materno valido"
            lblError.style.color = "green";
            return true;
        }
        else {
            lblError.innerHTML = "solo letras"
            lblError.style.color = "red";

            alert('Solo se aceptn letras');
            return false;
        }
    }




    $(document).ready(function () {
        $("#ddlPais").change(function () {
            $("#ddlEstado").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetEstado")',
                dataType: 'json',
                data: { IdPais: $("#ddlPais").val() },
                success: function (estados) {
                    $("#ddlEstado").append('<option value="0">' + 'Seleccione una opción' + '</option>');
                    $.each(estados, function (i, estados) {
                        $("#ddlEstado").append('<option value="'
                            + estados.IdEstado + '">'
                            + estados.Nombre + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed.' + ex);
                }
            });
        });
    });


    $(document).ready(function () {
        $("#ddlEstado").change(function () {
            $("#ddlMunicipio").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetMunicipio")',
                dataType: 'json',
                data: { IdEstado: $("#ddlEstado").val() },
                success: function (municipios) {
                    $("#ddlMunicipio").append('<option value="0">' + 'Seleccione una opción' + '</option>');
                    $.each(municipios, function (i, municipios) {
                        $("#ddlMunicipio").append('<option value="'
                            + municipios.IdMunicipio + '">'
                            + municipios.Nombre + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed.' + ex);
                }
            });
        });
    });


    $(document).ready(function () {
        $("#ddlMunicipio").change(function () {
            $("#ddlColonia").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetColonia")',
                dataType: 'json',
                data: { IdMunicipio: $("#ddlMunicipio").val() },
                success: function (colonias) {
                    $("#ddlColonia").append('<option value="0">' + 'Seleccione una opción' + '</option>');
                    $.each(colonias, function (i, colonias) {
                        $("#ddlColonia").append('<option value="'
                            + colonias.IdColonia + '">'
                            + colonias.Nombre + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed.' + ex);
                }
            });
        });
    });



    </script>


















}
