//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PL_MVC.EmpresaServices {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EmpresaServices.IEmpresa")]
    public interface IEmpresa {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpresa/DoWork", ReplyAction="http://tempuri.org/IEmpresa/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpresa/DoWork", ReplyAction="http://tempuri.org/IEmpresa/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpresa/EmpresaAdd", ReplyAction="http://tempuri.org/IEmpresa/EmpresaAddResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ML.Result))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ML.Rol))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Exception))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ML.Empresa))]
        ML.Result EmpresaAdd(ML.Empresa empresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpresa/EmpresaAdd", ReplyAction="http://tempuri.org/IEmpresa/EmpresaAddResponse")]
        System.Threading.Tasks.Task<ML.Result> EmpresaAddAsync(ML.Empresa empresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpresa/EmpresaUpdate", ReplyAction="http://tempuri.org/IEmpresa/EmpresaUpdateResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ML.Result))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ML.Rol))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Exception))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ML.Empresa))]
        ML.Result EmpresaUpdate(ML.Empresa empresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpresa/EmpresaUpdate", ReplyAction="http://tempuri.org/IEmpresa/EmpresaUpdateResponse")]
        System.Threading.Tasks.Task<ML.Result> EmpresaUpdateAsync(ML.Empresa empresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpresa/EmpresaDelete", ReplyAction="http://tempuri.org/IEmpresa/EmpresaDeleteResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ML.Result))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ML.Rol))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Exception))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ML.Empresa))]
        ML.Result EmpresaDelete(ML.Empresa empresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpresa/EmpresaDelete", ReplyAction="http://tempuri.org/IEmpresa/EmpresaDeleteResponse")]
        System.Threading.Tasks.Task<ML.Result> EmpresaDeleteAsync(ML.Empresa empresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpresa/EmpresaGetById", ReplyAction="http://tempuri.org/IEmpresa/EmpresaGetByIdResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ML.Result))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ML.Rol))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Exception))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ML.Empresa))]
        ML.Result EmpresaGetById(ML.Empresa empresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpresa/EmpresaGetById", ReplyAction="http://tempuri.org/IEmpresa/EmpresaGetByIdResponse")]
        System.Threading.Tasks.Task<ML.Result> EmpresaGetByIdAsync(ML.Empresa empresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpresa/EmpresaGetAll", ReplyAction="http://tempuri.org/IEmpresa/EmpresaGetAllResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ML.Empresa))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ML.Rol))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Exception))]
        ML.Result EmpresaGetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpresa/EmpresaGetAll", ReplyAction="http://tempuri.org/IEmpresa/EmpresaGetAllResponse")]
        System.Threading.Tasks.Task<ML.Result> EmpresaGetAllAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEmpresaChannel : PL_MVC.EmpresaServices.IEmpresa, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmpresaClient : System.ServiceModel.ClientBase<PL_MVC.EmpresaServices.IEmpresa>, PL_MVC.EmpresaServices.IEmpresa {
        
        public EmpresaClient() {
        }
        
        public EmpresaClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EmpresaClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmpresaClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmpresaClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public ML.Result EmpresaAdd(ML.Empresa empresa) {
            return base.Channel.EmpresaAdd(empresa);
        }
        
        public System.Threading.Tasks.Task<ML.Result> EmpresaAddAsync(ML.Empresa empresa) {
            return base.Channel.EmpresaAddAsync(empresa);
        }
        
        public ML.Result EmpresaUpdate(ML.Empresa empresa) {
            return base.Channel.EmpresaUpdate(empresa);
        }
        
        public System.Threading.Tasks.Task<ML.Result> EmpresaUpdateAsync(ML.Empresa empresa) {
            return base.Channel.EmpresaUpdateAsync(empresa);
        }
        
        public ML.Result EmpresaDelete(ML.Empresa empresa) {
            return base.Channel.EmpresaDelete(empresa);
        }
        
        public System.Threading.Tasks.Task<ML.Result> EmpresaDeleteAsync(ML.Empresa empresa) {
            return base.Channel.EmpresaDeleteAsync(empresa);
        }
        
        public ML.Result EmpresaGetById(ML.Empresa empresa) {
            return base.Channel.EmpresaGetById(empresa);
        }
        
        public System.Threading.Tasks.Task<ML.Result> EmpresaGetByIdAsync(ML.Empresa empresa) {
            return base.Channel.EmpresaGetByIdAsync(empresa);
        }
        
        public ML.Result EmpresaGetAll() {
            return base.Channel.EmpresaGetAll();
        }
        
        public System.Threading.Tasks.Task<ML.Result> EmpresaGetAllAsync() {
            return base.Channel.EmpresaGetAllAsync();
        }
    }
}
